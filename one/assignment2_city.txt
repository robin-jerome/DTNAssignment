#
# Default settings for the simulation
#

## Scenario settings
Scenario.name = city_scenario-%%Group.router%%-interval-%%Events1.interval%%-seed-%%MovementModel.rngSeed%%
Scenario.simulateConnections = true
Scenario.updateInterval = 0.1
# 86400s == 24h
Scenario.endTime = 86400


## Interface-specific settings:
# type : which interface class the interface belongs to
# For different types, the sub-parameters are interface-specific
# For SimpleBroadcastInterface, the parameters are:
# transmitSpeed : transmit speed of the interface (bytes per second) 
# transmitRange : range of the interface (meters)

# "Bluetooth" interface for all nodes
wirelessInterface.type = SimpleBroadcastInterface
# Transmit speed of 2 Mbps = 250kBps
wirelessInterface.transmitSpeed = 250k
wirelessInterface.transmitRange = 20

# Define 8 different node groups
Scenario.nrofHostGroups = 8

## Group-specific settings:
# groupID : Group's identifier. Used as the prefix of host names
# nrofHosts: number of hosts in the group
# movementModel: movement model of the hosts (valid class name from movement package)
# waitTime: minimum and maximum wait times (seconds) after reaching destination
# speed: minimum and maximum speeds (m/s) when moving on a path
# bufferSize: size of the message buffer (bytes)
# router: router used to route messages (valid class name from routing package)
# activeTimes: Time intervals when the nodes in the group are active (start1, end1, start2, end2, ...)
# msgTtl : TTL (minutes) of the messages created by this host group, default=infinite

## Group and movement model specific settings
# pois: Points Of Interest indexes and probabilities (poiIndex1, poiProb1, poiIndex2, poiProb2, ... )
#       for ShortestPathMapBasedMovement
# okMaps : which map nodes are OK for the group (map file indexes), default=all 
#          for all MapBasedMovent models
# routeFile: route's file path - for MapRouteMovement
# routeType: route's type - for MapRouteMovement


# Common settings for all groups
Group.movementModel = ShortestPathMapBasedMovement
<<<<<<< Updated upstream
Group.router = CityRouter
=======
Group.router = DirectDeliveryRouter
>>>>>>> Stashed changes
Group.bufferSize = 30M
Group.waitTime = 0, 120
Group.nrofInterfaces = 1
Group.interface1 = wirelessInterface
# Walking speeds
Group.speed = 0.5, 1.5
# Message TTL of 1440 minutes (24 hours)
Group.msgTtl = 1440

Group.nrofHosts = 40

# group1 (pedestrians) specific settings
Group1.groupID = c
Group1.okMaps = 5

# another group of pedestrians
Group2.groupID = w
Group2.okMaps = 6

# another group of pedestrians
Group3.groupID = e
Group3.okMaps = 7

# group4 specific settings
Group4.groupID = sw
Group4.nrofHosts = 40
Group4.okMaps = 8
Group4.speed = 0.5, 1.5
Group4.bufferSize = 30M
Group4.movementModel = ShortestPathMapBasedMovement
Group4.nrofInterfaces = 1
Group4.interface1 = wirelessInterface

# The Tram groups
Group5.groupID = t
Group5.bufferSize = 1G
Group5.movementModel = MapRouteMovement
Group5.routeFile = data/tram3.wkt
Group5.routeType = 1
Group5.waitTime = 10, 30
Group5.speed = 7, 10
Group5.nrofHosts = 4

Group6.groupID = t
Group6.bufferSize = 1G
Group6.movementModel = MapRouteMovement
Group6.routeFile = data/tram4.wkt
Group6.routeType = 2
Group6.waitTime = 10, 30
Group6.speed = 7, 10
Group6.nrofHosts = 4

Group7.groupID = t
Group7.bufferSize = 1G
Group7.movementModel = MapRouteMovement
Group7.routeFile = data/tram10.wkt
Group7.routeType = 2
Group7.waitTime = 10, 30
Group7.speed = 7, 10
Group7.nrofHosts = 4

Group8.groupID = t
Group8.bufferSize = 1G
Group8.movementModel = MapRouteMovement
Group8.routeFile = data/tram6.wkt
Group8.routeType = 2
Group8.waitTime = 10, 30
Group8.speed = 7, 10
Group8.nrofHosts = 4


## Message creation parameters 
# How many event generators
Events.nrof = 1
# Class of the first event generator
Events1.class = MessageEventGenerator
# (following settings are specific for the MessageEventGenerator class)
# Creation interval in seconds
Events1.interval = [70;100]
# Message sizes (500kB - 1MB)
Events1.size = 500k,1M
# range of message source/destination addresses
Events1.hosts = 0,119
# Message ID prefix
Events1.prefix = M


## Movement model settings
# seed for movement models' pseudo random number generator (default = 0)
MovementModel.rngSeed = 4
# World's size for Movement Models without implicit size (width, height; meters)
MovementModel.worldSize = 4500, 3400
# How long time to move hosts in the world before real simulation
MovementModel.warmup = 1000

## Map based movement -movement model specific settings
MapBasedMovement.nrofMapFiles = 8

MapBasedMovement.mapFile1 = data/roads.wkt
MapBasedMovement.mapFile2 = data/main_roads.wkt
MapBasedMovement.mapFile3 = data/pedestrian_paths.wkt
MapBasedMovement.mapFile4 = data/shops.wkt
MapBasedMovement.mapFile5 = data/center.wkt
MapBasedMovement.mapFile6 = data/west.wkt
MapBasedMovement.mapFile7 = data/east.wkt
MapBasedMovement.mapFile8 = data/south-west.wkt

## Reports - all report names have to be valid report classes

# how many reports to load
Report.nrofReports = 1
# length of the warm up period (simulated seconds)
Report.warmup = 0
# default directory of reports (can be overridden per Report with output setting)
Report.reportDir = reports/
# Report classes to load
Report.report1 = MessageStatsReport

## Default settings for some routers settings
ProphetRouter.secondsInTimeUnit = 30
SprayAndWaitRouter.nrofCopies = 6
SprayAndWaitRouter.binaryMode = true
CityRouter.nrofCopies = 32
CityRouter.binaryMode = true
CityRouter.bufferSizeCoefficient = 1

## Optimization settings -- these affect the speed of the simulation
## see World class for details.
Optimization.cellSizeMult = 5
Optimization.randomizeUpdateOrder = true


## GUI settings

# GUI underlay image settings
GUI.UnderlayImage.fileName = data/helsinki_underlay.png
# Image offset in pixels (x, y)
GUI.UnderlayImage.offset = 64, 20
# Scaling factor for the image
GUI.UnderlayImage.scale = 4.75
# Image rotation (radians)
GUI.UnderlayImage.rotate = -0.015

# how many events to show in the log panel (default = 30)
GUI.EventLogPanel.nrofEvents = 100
# Regular Expression log filter (see Pattern-class from the Java API for RE-matching details)
#GUI.EventLogPanel.REfilter = .*p[1-9]<->p[1-9]$
