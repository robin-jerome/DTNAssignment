#
# Default settings for the simulation
#

## Scenario settings
Scenario.name = plain_area_scenario-Circular-coeff-%%CircularSpreadRouter.directionCoefficient%%-%%Events1.interval%%-seed-%%MovementModel.rngSeed%%
Scenario.simulateConnections = true
Scenario.updateInterval = 0.1
# 86400s == 24h
Scenario.endTime = 86400


## Interface-specific settings:
# type : which interface class the interface belongs to
# For different types, the sub-parameters are interface-specific
# For SimpleBroadcastInterface, the parameters are:
# transmitSpeed : transmit speed of the interface (bytes per second) 
# transmitRange : range of the interface (meters)

# "Bluetooth" interface for all nodes
wirelessInterface.type = SimpleBroadcastInterface
# Transmit speed of 2 Mbps = 250kBps
wirelessInterface.transmitSpeed = 250k
wirelessInterface.transmitRange = 20

# Define 8 different node groups
Scenario.nrofHostGroups = 1

## Group-specific settings:
# groupID : Group's identifier. Used as the prefix of host names
# nrofHosts: number of hosts in the group
# movementModel: movement model of the hosts (valid class name from movement package)
# waitTime: minimum and maximum wait times (seconds) after reaching destination
# speed: minimum and maximum speeds (m/s) when moving on a path
# bufferSize: size of the message buffer (bytes)
# router: router used to route messages (valid class name from routing package)
# activeTimes: Time intervals when the nodes in the group are active (start1, end1, start2, end2, ...)
# msgTtl : TTL (minutes) of the messages created by this host group, default=infinite

## Group and movement model specific settings
# pois: Points Of Interest indexes and probabilities (poiIndex1, poiProb1, poiIndex2, poiProb2, ... )
#       for ShortestPathMapBasedMovement
# okMaps : which map nodes are OK for the group (map file indexes), default=all 
#          for all MapBasedMovent models
# routeFile: route's file path - for MapRouteMovement
# routeType: route's type - for MapRouteMovement


# Common settings for all groups
Group.movementModel = GaussMarkovModel
Group.router = CircularSpreadRouter
Group.bufferSize = 30M
Group.waitTime = 0, 120
Group.nrofInterfaces = 1
Group.interface1 = wirelessInterface
# Walking + running speeds
Group.speed = 1.0, 5.0
# Message TTL of 1440 minutes (24 hours)
Group.msgTtl = 1440

Group.nrofHosts = 50

CircularSpreadRouter.nrofCopies = 6
CircularSpreadRouter.binaryMode = true
CircularSpreadRouter.directionCoefficient = 6

## Message creation parameters 
# How many event generators
Events.nrof = 1
# Class of the first event generator
Events1.class = MessageEventGenerator
# (following settings are specific for the MessageEventGenerator class)
# Creation interval in seconds
Events1.interval = [5;10]
# Message sizes (500kB - 1MB)
Events1.size = 500k,1M
# range of message source/destination addresses
Events1.hosts = 0,49
# Message ID prefix
Events1.prefix = M


## Movement model settings
## Movement model settings

GaussMarkovModel.alpha = 0.5
GaussMarkovModel.meanSpeed = 3
GaussMarkovModel.speedVariance = 0.5
GaussMarkovModel.phaseVariance = 1
GaussMarkovModel.timeInterval = 10
# seed for movement models' pseudo random number generator for speed and direction (default = 0)
GaussMarkovModel.speedGaussMarkovRNGSeed = 1
GaussMarkovModel.phaseGaussMarkovRNGSeed = 2

# World's size for Movement Models without implicit size (width, height; meters)
MovementModel.worldSize = 2000,2000
# How long time to move hosts in the world before real simulation
MovementModel.warmup = 1000

## Reports - all report names have to be valid report classes

# how many reports to load
Report.nrofReports = 1
# length of the warm up period (simulated seconds)
Report.warmup = 0
# default directory of reports (can be overridden per Report with output setting)
Report.reportDir = reports/
# Report classes to load
Report.report1 = MessageStatsReport

## Default settings for some routers settings
ProphetRouter.secondsInTimeUnit = 30
SprayAndWaitRouter.nrofCopies = 6
SprayAndWaitRouter.binaryMode = true

## Optimization settings -- these affect the speed of the simulation
## see World class for details.
Optimization.cellSizeMult = 5
Optimization.randomizeUpdateOrder = true


## GUI settings

# GUI underlay image settings
GUI.UnderlayImage.fileName = data/helsinki_underlay.png
# Image offset in pixels (x, y)
GUI.UnderlayImage.offset = 64, 20
# Scaling factor for the image
GUI.UnderlayImage.scale = 4.75
# Image rotation (radians)
GUI.UnderlayImage.rotate = -0.015

# how many events to show in the log panel (default = 30)
GUI.EventLogPanel.nrofEvents = 100
# Regular Expression log filter (see Pattern-class from the Java API for RE-matching details)
#GUI.EventLogPanel.REfilter = .*p[1-9]<->p[1-9]$
