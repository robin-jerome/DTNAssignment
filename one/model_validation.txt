## Default settings for the simulation### Scenario settingsScenario.name = default_scenarioScenario.simulateConnections = trueScenario.updateInterval = 0.1# 43200s == 12hScenario.endTime = 86400# Define 1 node groupScenario.nrofHostGroups = 1## Group-specific settings:# groupID : Group's identifier. Used as the prefix of host names# nrofHosts: number of hosts in the group# movementModel: movement model of the hosts (valid class name from movement package)# router: router used to route messages (valid class name from routing package)# Common settings for all groupsGroup.movementModel = GaussMarkovModelGroup.router = EpidemicRouter# no interfaces available. We're interested only in movement modellingGroup.nrofInterfaces = 0# We want to study movement of just one nodeGroup.nrofHosts = 1# group1 (pedestrians) specific settingsGroup1.groupID = p## Message creation parameters # How many event generators# We don't want to generate any events in this scenarioEvents.nrof = 0## Movement model settingsGaussMarkovModel.alpha = 0.1GaussMarkovModel.meanSpeed = 2GaussMarkovModel.speedVariance = 0.5GaussMarkovModel.phaseVariance = 1.0GaussMarkovModel.timeInterval = 10# seed for movement models' pseudo random number generator for speed and direction (default = 0)GaussMarkovModel.speedGaussMarkovRNGSeed = 1GaussMarkovModel.phaseGaussMarkovRNGSeed = 1# World's size for Movement Models without implicit size (width, height; meters)MovementModel.worldSize = 2000, 2000# How long time to move hosts in the world before real simulationMovementModel.warmup = 0## Reports - all report names have to be valid report classes# how many reports to loadReport.nrofReports = 1# length of the warm up period (simulated seconds)Report.warmup = 0# default directory of reports (can be overridden per Report with output setting)Report.reportDir = reports/# Report classes to load# Load MovementTraceReportReport.report1 = ???## Optimization settings -- these affect the speed of the simulation## see World class for details.Optimization.cellSizeMult = 5Optimization.randomizeUpdateOrder = true## GUI settings# GUI underlay image settingsGUI.UnderlayImage.fileName = data/helsinki_underlay.png# Image offset in pixels (x, y)GUI.UnderlayImage.offset = 64, 20# Scaling factor for the imageGUI.UnderlayImage.scale = 4.75# Image rotation (radians)GUI.UnderlayImage.rotate = -0.015# how many events to show in the log panel (default = 30)GUI.EventLogPanel.nrofEvents = 100# Regular Expression log filter (see Pattern-class from the Java API for RE-matching details)#GUI.EventLogPanel.REfilter = .*p[1-9]<->p[1-9]$